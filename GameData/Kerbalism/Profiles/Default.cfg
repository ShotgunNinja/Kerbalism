// ============================================================================
// The default profile
// ============================================================================

Profile
{
  name = default

  Supply
  {
    resource = ElectricCharge
    on_pod = 50.0
    on_eva = 25.0
    on_resque = 250.0
    low_message = $VESSEL batteries are almost empty@<i>We are squeezing the last bit of juice</i>|$VESSEL batteries are almost empty@<i>Shutting down non-essential systems</i>
    empty_message = There is no more ElectricCharge on $VESSEL@<i>Life support systems are off</i>|There is no more ElectricCharge on $VESSEL@<i>We lost control</i>
    refill_message = $VESSEL batteries recharged@<i>The crew is allowed music again</i>|$VESSEL batteries recharged@<i>Systems are back online</i>
  }

  Supply
  {
    resource = Food
    on_pod = 31.491405
    on_resque = 100.0
    low_message = Food reserves are getting low on $VESSEL@<i>Anything edible is being scrutinized</i>
    empty_message = There is no more food on $VESSEL@<i>The crew prepare for the inevitable</i>
    refill_message = $VESSEL food reserves restored@<i>Double snack rations for everybody</i>
  }

  Supply
  {
    resource = Water
    on_pod = 12.1
    on_resque = 100.0
    low_message = Water reserves are getting low on $VESSEL@<i>Hygiene schedule suspended until further notice</i>
    empty_message = There is no more water on $VESSEL@<i>Licking the condense is not a viable solution</i>
    refill_message = $VESSEL water reserves restored@<i>The situation look much better now</i>
  }

  Supply
  {
    resource = Oxygen
    on_pod = 2978.7
    on_eva = 100.0
    on_resque = 10000.0
    low_message = Oxygen reserves are dangerously low on $VESSEL@<i>There is mild panic among the crew</i>
    empty_message = There is no more oxygen on $VESSEL@<i>Everybody stop breathing</i>
    refill_message = $VESSEL oxygen reserves restored@<i>The crew is taking a breather</i>
  }

  Supply
  {
    resource = Nitrogen
    low_message = Nitrogen reserves are getting low on $VESSEL
    empty_message = There is no more nitrogen on $VESSEL@<i>Time to go back in the suits</i>
    refill_message = $VESSEL nitrogen reserves restored@<i>Let's get out of these damn suits</i>
  }

  Supply
  {
    resource = Hydrogen
    low_message = Hydrogen tanks are almost empty on $VESSEL
    empty_message = There is no more hydrogen on $VESSEL tanks
    refill_message = $VESSEL hydrogen tanks refilled
  }

  Supply
  {
    resource = Ammonia
    low_message = Ammonia tanks are almost empty on $VESSEL
    empty_message = There is no more ammonia on $VESSEL tanks@<i>Maybe it is time for some smelly alternative</i>
    refill_message = $VESSEL ammonia tanks refilled
  }

  Rule
  {
    name = climatization
    input = ElectricCharge
    rate = 0.0002 // per-kelvin (temp diff), per m^3 (living space), per-second
    degeneration = 0.00000345 // 30min
    modifier = temperature,volume,per_capita
    warning_message = $ON_VESSEL$KERBAL feels cold|$ON_VESSEL$KERBAL is sweating
    danger_message = $ON_VESSEL$KERBAL is freezing to death|$ON_VESSEL$KERBAL is burning alive
    fatal_message = $ON_VESSEL$KERBAL froze to death|$ON_VESSEL$KERBAL was burned alive
    relax_message = $ON_VESSEL$KERBAL hypothermia is under control|$ON_VESSEL$KERBAL is hugging the climatizer
  }

  Rule
  {
    name = eating
    input = Food
    output = Waste
    rate = 3.145 // 1.77 Kg per-day
    interval = 10800.0 // 2 meals per-day
    degeneration = 0.03333 // 30 meals, 15 days
    warning_message = $ON_VESSEL$KERBAL is hungry
    danger_message = $ON_VESSEL$KERBAL is starving
    fatal_message = $ON_VESSEL$KERBAL starved to death
    relax_message = $ON_VESSEL$KERBAL is enjoying some snacks right now
  }

  Rule
  {
    name = drinking
    input = Water
    output = WasteWater
    rate = 0.605 // 2.42 Kg per-day
    interval = 5400.0 // 4 drinks per-day
    degeneration = 0.08333 // 12 drinks, 3 days
    warning_message = $ON_VESSEL$KERBAL is thirsty
    danger_message = $ON_VESSEL$KERBAL is dehydrated
    fatal_message = $ON_VESSEL$KERBAL died from dehydration
    relax_message = $ON_VESSEL$KERBAL is enjoying some drinks right now
  }

  Rule
  {
    name = breathing
    input = Oxygen
    output = WasteAtmosphere
    rate = 0.02758 // 0.84 Kg per-day
    degeneration = 0.0055555 // 3 minutes
    modifier = breathable
    warning_message = $ON_VESSEL$KERBAL can't breathe
    danger_message = $ON_VESSEL$KERBAL is suffocating
    fatal_message = $ON_VESSEL$KERBAL suffocated to death
    relax_message = $ON_VESSEL$KERBAL is breathing again
  }

  Rule
  {
    name = co2 poisoning
    degeneration = 0.0005555 // 30 minutes
    modifier = poisoning,breathable
    warning_message = $ON_VESSEL$KERBAL's head feels light
    danger_message = $ON_VESSEL$KERBAL seem unable to breath properly
    fatal_message = $ON_VESSEL$KERBAL died of co2 poisoning
    relax_message = $ON_VESSEL$KERBAL is breathing again
  }

  Rule
  {
    name = stress
    degeneration = 0.00000000463 // 10000 days
    variance = 0.33 // add per-kerbal variance
    modifier = living_space,comfort,pressure
    breakdown = true // trigger breakdown event instead of death
    warning_message = $ON_VESSEL$KERBAL is losing $HIS_HER mind@<i>Concentration is becoming a problem</i>
    danger_message = $ON_VESSEL$KERBAL is about to breakdown@<i>Starting to hear voices</i>
    relax_message = $ON_VESSEL$KERBAL is thinking straight now@<i>Let's do it again!</i>
  }

  Rule
  {
    name = radiation
    degeneration = 1.0 // just use the modifier
    variance = 0.1 // add per-kerbal variance
    modifier = radiation,shielding
    warning_threshold = 25.0
    danger_threshold = 37.5
    fatal_threshold = 50.0
    warning_message = $ON_VESSEL$KERBAL has been exposed to intense radiation
    danger_message = $ON_VESSEL$KERBAL is reporting symptoms of radiation poisoning
    fatal_message = $ON_VESSEL$KERBAL died after being exposed to extreme radiation
    relax_message = $ON_VESSEL$KERBAL has recovered from radiation exposure
  }

  Process
  {
    name = scrubber
    modifier = _Scrubber
    input = ElectricCharge@0.1
    input = WasteAtmosphere@0.00008
    output = CarbonDioxide@0.08
  }

  Process
  {
    name = pressure control
    modifier = _PressureControl
    input = Nitrogen@0.6
    output = Atmosphere@0.0006
    dump = false
  }

  Process
  {
    name = atmo leaks
    modifier = surface,breathable
    input = Atmosphere@0.000005
  }

  Process
  {
    name = water recycler
    modifier = _WaterRecycler
    input = ElectricCharge@0.2
    input = WasteWater@0.0005
    output = Water@0.0004
    output = Waste@0.0001
  }

  Process
  {
    name = waste processor
    modifier = _WasteProcessor
    input = ElectricCharge@0.3
    input = Waste@0.0005
    output = Ammonia@0.25
  }

  Process
  {
    name = fuel cell
    modifier = _FuelCell
    input = Hydrogen@1.0
    input = Oxygen@0.5065966
    output = Water@0.0008043
    output = ElectricCharge@0.5
  }

  Process
  {
    name = water electrolysis
    modifier = _WaterElectrolysis
    input = ElectricCharge@0.5
    input = Water@0.003242754
    output = Hydrogen@1.0
    output = Oxygen@2.042476596
  }

  Process
  {
    name = sabatier process
    modifier = _Sabatier
    input = CarbonDioxide@2.030166581
    input = ElectricCharge@0.5
    input = Hydrogen@1.0
    output = Water@0.003242754
    output = LiquidFuel@0.001443825 // (Methane@2.013702929)
  }

  Process
  {
    name = haber process
    modifier = _Haber
    input = Nitrogen@1.007676259
    input = Hydrogen@1.0
    output = Ammonia@1.993178153
  }

  Process
  {
    name = anthraquinone process
    modifier = _Anthraquinone
    input = Hydrogen@1.0
    input = Oxygen@2.042476596
    output = Oxidizer@0.003061323 // (HydrogenPeroxide@0.002111257241)
  }

  Process
  {
    name = hydrazine production
    modifier = _HydrazineProduction
    input = Ammonia@3.986344603
    input = Oxidizer@0.003061323 // (HydrogenPeroxide@0.002111257241)
    output = Water@0.003242754
    output = MonoPropellant@0.003605085 // (Hydrazine@0.002872577689)
  }

  Process
  {
    name = solid oxide electrolysis
    modifier = _SOE
    input = ElectricCharge@1.0
    input = CarbonDioxide@2.030166581
    output = Oxygen@2.042476596
    // Carbon@0.000514744 is wasted
  }

  Process
  {
    name = molten regolith electrolysis
    modifier = _MRE
    input = ElectricCharge@2.5
    input = Ore@0.01
    output = Oxygen@1.0
  }
}


// ============================================================================
// Add configurable Life Support System to all manned parts
// ============================================================================

@PART[*]:HAS[#CrewCapacity[>0]]:NEEDS[ProfileDefault]:FOR[Kerbalism]
{
  MODULE
  {
    name = ProcessController
    resource = _Scrubber
    title = Scrubber
    capacity = 1
    running = true
  }

  MODULE
  {
    name = ProcessController
    resource = _PressureControl
    title = Pressure control
    capacity = 1
    running = true
  }

  MODULE
  {
    name = ProcessController
    resource = _WaterRecycler
    title = Water recycler
    capacity = 1
  }

  MODULE
  {
    name = ProcessController
    resource = _WasteProcessor
    title = Waste processor
    capacity = 1
    running = true
    toggle = false
  }

  MODULE
  {
    name = Configure
    title = Pod
    slots = 2

    SETUP
    {
      name = Scrubber
      desc = Sequester <b>CarbonDioxide</b> from the internal atmosphere.
      mass = 0.01
      cost = 250

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _Scrubber
      }
    }

    SETUP
    {
      name = Pressure Control
      desc = Use <b>Nitrogen</b> to maintain the internal atmosphere at a comfortable pressure.
      tech = engineering101
      mass = 0.01
      cost = 250

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _PressureControl
      }

      RESOURCE
      {
        name = Nitrogen
        amount = 10000
        maxAmount = 10000
      }
    }

    SETUP
    {
      name = Water Recycler
      desc = Filter impurities out of <b>WasteWater</b>.
      tech = spaceExploration
      mass = 0.05
      cost = 500


      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _WaterRecycler
      }

      RESOURCE
      {
        name = WasteWater
        amount = 0
        maxAmount = 5
      }
    }

    SETUP
    {
      name = Waste Processor
      desc = Extract <b>Ammonia</b> out of decomposing organic waste.
      tech = advExploration
      mass = 0.05
      cost = 500

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _WasteProcessor
      }

      RESOURCE
      {
        name = Waste
        amount = 0
        maxAmount = 5
      }
    }
  }

  MODULE:NEEDS[FeatureReliability]
  {
    name = Reliability
    type = ProcessController
    title = ECLSS
    redundancy = Life Support
    repair = true // anyone
    mtbf = 72576000 // 8y
    extra_cost = 2.5
    extra_mass = 0.1
  }
}

// tweak number of slots
@PART[MK1CrewCabin|Mark2Cockpit|cupola]:NEEDS[ProfileDefault]:FOR[Kerbalism] { @MODULE[Configure] { @slots = 1 } }
@PART[mk3Cockpit_Shuttle]:NEEDS[ProfileDefault]:FOR[Kerbalism] { @MODULE[Configure] { @slots = 3 } }



// ============================================================================
// Add scrubber process to EVA kerbals
// ============================================================================
@PART[kerbalEVA,kerbalEVAfemale]:NEEDS[ProfileDefault]:FOR[Kerbalism]
{
  MODULE
  {
    name = ProcessController
    resource = _Scrubber
    title = Scrubber
    capacity = 0.5
    toggle = true
    running = true
  }
}

// ============================================================================
// Add configurable supplies to inline containers
// ============================================================================

@PART[kerbalism-container-inline-*]:NEEDS[ProfileDefault]:FOR[Kerbalism]
{
  MODULE
  {
    name = Configure
    title = Supply Container
    slots = 1

    SETUP
    {
      name = Supplies
      desc = Store a balanced supply of <b>Food</b> and <b>Water</b>.

      RESOURCE
      {
        name = Food
        amount = 0.7224224
        maxAmount = 0.7224224
        @amount *= #$../../../ContainerVolume$
        @maxAmount *= #$../../../ContainerVolume$
      }

      RESOURCE
      {
        name = Water
        amount = 0.2775776
        maxAmount = 0.2775776
        @amount *= #$../../../ContainerVolume$
        @maxAmount *= #$../../../ContainerVolume$
      }
    }

    SETUP
    {
      name = Waste
      desc = Store solid and liquid organic waste.

      RESOURCE
      {
        name = Waste
        amount = 0
        maxAmount = 0.4949706
        @amount *= #$../../../ContainerVolume$
        @maxAmount *= #$../../../ContainerVolume$
      }

      RESOURCE
      {
        name = WasteWater
        amount = 0
        maxAmount = 0.5050294
        @amount *= #$../../../ContainerVolume$
        @maxAmount *= #$../../../ContainerVolume$
      }
    }

    SETUP
    {
      name = Food

      RESOURCE
      {
        name = Food
        amount = 1
        maxAmount = 1
        @amount *= #$../../../ContainerVolume$
        @maxAmount *= #$../../../ContainerVolume$
      }
    }

    SETUP
    {
      name = Water

      RESOURCE
      {
        name = Water
        amount = 1
        maxAmount = 1
        @amount *= #$../../../ContainerVolume$
        @maxAmount *= #$../../../ContainerVolume$
      }
    }
  }
}


// ============================================================================
// Add configurable supplies to radial containers
// ============================================================================

@PART[kerbalism-container-radial-*]:NEEDS[ProfileDefault]:FOR[Kerbalism]
{
  MODULE
  {
    name = Configure
    title = Pressurized Tank
    slots = 1

    SETUP
    {
      name = Oxygen
      desc = Store liquid oxygen

      RESOURCE
      {
        name = Oxygen
        amount = 809.22
        maxAmount = 809.22
        @amount *= #$../../../ContainerVolume$
        @maxAmount *= #$../../../ContainerVolume$
      }
    }

    SETUP
    {
      name = Nitrogen
      desc = Store liquid nitrogen

      RESOURCE
      {
        name = Nitrogen
        amount = 659.4
        maxAmount = 659.4
        @amount *= #$../../../ContainerVolume$
        @maxAmount *= #$../../../ContainerVolume$
      }
    }

    SETUP
    {
      name = Hydrogen
      desc = Store liquid hydrogen

      RESOURCE
      {
        name = Hydrogen
        amount = 788.1
        maxAmount = 788.1
        @amount *= #$../../../ContainerVolume$
        @maxAmount *= #$../../../ContainerVolume$
      }
    }

    SETUP
    {
      name = Ammonia
      desc = Store liquid ammonia

      RESOURCE
      {
        name = Ammonia
        amount = 913.0
        maxAmount = 913.0
        @amount *= #$../../../ContainerVolume$
        @maxAmount *= #$../../../ContainerVolume$
      }
    }

    SETUP
    {
      name = CarbonDioxide
      desc = Store liquid co2

      RESOURCE
      {
        name = CarbonDioxide
        amount = 0
        maxAmount = 601.36
        @amount *= #$../../../ContainerVolume$
        @maxAmount *= #$../../../ContainerVolume$
      }
    }
  }
}


// ============================================================================
// Setup greenhouse
// ============================================================================

@PART[kerbalism-greenhouse]:NEEDS[ProfileDefault]:FOR[Kerbalism]
{
  MODULE
  {
    name = Greenhouse

    crop_resource = Food                // name of resource produced by harvests
    crop_size = 2500.0                  // amount of resource produced by harvests
    crop_rate = 0.00000023148           // growth per-second when all conditions apply
    ec_rate = 2.5                       // EC/s consumed by the lamp at max intensity

    light_tolerance = 400.0             // minimum lighting flux required for growth, in W/m^2
    pressure_tolerance = 0.1            // minimum pressure required for growth, in sea level atmospheres
    radiation_tolerance = 0.000008333   // maximum radiation allowed for growth in rad/s, considered after shielding is applied

    lamps = Cylinder001                 // object with emissive texture used to represent lamp intensity graphically
    shutters = door                     // animation to manipulate shutters
    plants =                            // animation to represent plant growth graphically

    INPUT_RESOURCE
    {
      name = Ammonia
      rate = 0.00695                    // 37530 units required for crop
    }

    INPUT_RESOURCE
    {
      name = Water
      rate = 0.00023148                 // 1250 units required for crop
    }

    OUTPUT_RESOURCE
    {
      name = Oxygen
      rate = 0.00463                    // 25% of oxygen required by 1 crew member
    }

    OUTPUT_RESOURCE
    {
      name = WasteWater
      rate = 0.00023033
    }
  }

  MODULE
  {
    name = Habitat
    toggle = false
  }

  RESOURCE
  {
    name = Waste
    amount = 0
    maxAmount = 10
  }

  RESOURCE
  {
    name = Ammonia
    amount = 1000
    maxAmount = 1000
  }
}


// ============================================================================
// Fuel cells
// ============================================================================

@PART[FuelCell]:NEEDS[ProfileDefault]:FOR[Kerbalism]
{
  !MODULE[ModuleResourceConverter] {}
  !RESOURCE[ElectricCharge] {}

  MODULE
  {
    name = ProcessController
    resource = _FuelCell
    title = Fuel cell
    capacity = 1
  }

  MODULE:NEEDS[FeatureReliability]
  {
    name = Reliability
    type = ProcessController
    title = Fuel Cell
    redundancy = Power Generation
    repair = Engineer
    mtbf = 72576000 // 8y
    extra_cost = 1.0
    extra_mass = 0.5
  }

  @TechRequired = basicScience
}

@PART[FuelCellArray]:NEEDS[ProfileDefault]:FOR[Kerbalism]
{
  !MODULE[ModuleResourceConverter] {}
  !RESOURCE[ElectricCharge] {}

  MODULE
  {
    name = ProcessController
    resource = _FuelCell
    title = Fuel cell
    capacity = 6
  }

  MODULE:NEEDS[FeatureReliability]
  {
    name = Reliability
    type = ProcessController
    title = Fuel Cell
    redundancy = Power Generation
    repair = Engineer
    mtbf = 72576000 // 8y
    extra_cost = 1.0
    extra_mass = 0.5
  }
}


// ============================================================================
// ISRU chemical plants
// ============================================================================

@PART[kerbalism-chemicalplant,MiniISRU,ISRU,smallISRU]:NEEDS[ProfileDefault]:FOR[Kerbalism]
{
  !MODULE[ModuleResourceConverter],* {}
  !MODULE[ModuleOverheatDisplay] {}
  !MODULE[ModuleCoreHeat] {}

  MODULE
  {
    name = ProcessController
    resource = _WaterElectrolysis
    title = Water electrolysis
    capacity = 1
  }

  MODULE
  {
    name = ProcessController
    resource = _Sabatier
    title = Sabatier process
    capacity = 1
  }

  MODULE
  {
    name = ProcessController
    resource = _Haber
    title = Haber process
    capacity = 1
  }

  MODULE
  {
    name = ProcessController
    resource = _Anthraquinone
    title = Anthraquinone process
    capacity = 1
  }

  MODULE
  {
    name = ProcessController
    resource = _HydrazineProduction
    title = Hydrazine production
    capacity = 1
  }

  MODULE
  {
    name = ProcessController
    resource = _MRE
    title = MRE
    capacity = 1
  }

  MODULE
  {
    name = ProcessController
    resource = _SOE
    title = SOE
    capacity = 1
  }

  MODULE
  {
    name = Configure
    title = Chemical Plant
    slots = 1

    SETUP
    {
      name = Water Electrolysis

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _WaterElectrolysis
      }
    }

    SETUP
    {
      name = Sabatier Process

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _Sabatier
      }
    }

    SETUP
    {
      name = Haber Process

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _Haber
      }
    }

    SETUP
    {
      name = Anthraquinone Process
      tech = advScienceTech

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _Anthraquinone
      }
    }

    SETUP
    {
      name = Hydrazine Production
      tech = advScienceTech

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _HydrazineProduction
      }
    }

    SETUP
    {
      name = Solid Oxide Electrolysis
      desc = Convert <b>CarbonDioxide</b> into <b>Oxygen</b>, using vast amounts of <b>ElectricCharge</b> in the process.
      tech = experimentalScience

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _SOE
      }
    }

    SETUP
    {
      name = Molten Regolith Electrolysis
      desc = Extract <b>Oxygen</b> out of <b>Ore</b>.
      tech = experimentalScience

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _MRE
      }
    }
  }

  MODULE:NEEDS[FeatureReliability]
  {
    name = Reliability
    type = ProcessController
    title = Chemical Plant
    repair = Engineer
    mtbf = 72576000 // 8y
    extra_cost = 1.0
    extra_mass = 0.2
  }
}

@PART[MiniISRU]:NEEDS[ProfileDefault]:FOR[Kerbalism]
{
  @MODULE[ProcessController]
  {
    @capacity *= 3.3
  }
}

@PART[ISRU]:NEEDS[ProfileDefault]:FOR[Kerbalism]
{
  @MODULE[ProcessController]
  {
    @capacity *= 5.0
  }

  @MODULE[Configure]
  {
    %slots = 2
  }
}

@PART[smallISRU]:NEEDS[ProfileDefault]:FOR[Kerbalism]
{
  @MODULE[ProcessController]
  {
    @capacity *= 2.0
  }
}


// ============================================================================
// ISRU drills
// ============================================================================

@PART[MiniDrill,RadialDrill]:NEEDS[ProfileDefault]:FOR[Kerbalism]
{
  !MODULE[ModuleResourceHarvester] {}
  !MODULE[ModuleOverheatDisplay] {}
  !MODULE[ModuleCoreHeat] {}

  MODULE
  {
    name = Harvester
    title = Water Extraction
    drill = ImpactTransform
    type = 0
    resource = Water
    min_abundance = 0.01
    rate = 0.0005
    ec_rate = 1.0
  }

  MODULE
  {
    name = Harvester
    title = Ore Extraction
    drill = ImpactTransform
    type = 0
    resource = Ore
    min_abundance = 0.05
    rate = 0.0025
    ec_rate = 1.0
  }

  MODULE
  {
    name = Configure
    title = Drill
    slots = 1

    SETUP
    {
      name = Water Extraction
      desc = Extract <b>Water</b> from the surface.

      MODULE
      {
        type = Harvester
        id_field = resource
        id_value = Water
      }

      RESOURCE
      {
        name = Water
        amount = 0
        maxAmount = 50
      }
    }

    SETUP
    {
      name = Ore Extraction
      desc = Extract <b>Ore</b> from the surface.

      MODULE
      {
        type = Harvester
        id_field = resource
        id_value = Ore
      }

      RESOURCE
      {
        name = Ore
        amount = 0
        maxAmount = 50
      }
    }
  }

  MODULE:NEEDS[FeatureReliability]
  {
    name = Reliability
    type = Harvester
    title = Harvester
    repair = Engineer
    mtbf = 72576000 // 8y
    extra_cost = 1.0
    extra_mass = 0.2
  }
}
@PART[RadialDrill]:NEEDS[ProfileDefault]:FOR[Kerbalism]
{
  @MODULE[Harvester],*
  {
    @rate *= 5
    @ec_rate *= 5
  }
}


// ============================================================================
// atmospheric harvester
// the atmospheric experiment part is used as an atmospheric harvester
// ============================================================================

@PART[sensorAtmosphere]:NEEDS[ProfileDefault]:FOR[Kerbalism]
{
  MODULE
  {
    name = Harvester
    title = CO2 Filter
    type = 2
    resource = CarbonDioxide
    min_abundance = 0.005
    min_pressure = 4.0
    rate = 0.2
    ec_rate = 0.5
  }

  MODULE
  {
    name = Harvester
    title = Oxygen Filter
    type = 2
    resource = Oxygen
    min_abundance = 0.02
    min_pressure = 5.0
    rate = 0.25
    ec_rate = 0.5
  }

  MODULE
  {
    name = Harvester
    title = Nitrogen Filter
    type = 2
    resource = Nitrogen
    min_abundance = 0.01
    min_pressure = 2.0
    rate = 0.35
    ec_rate = 0.5
  }

  MODULE
  {
    name = Configure
    title = Atmospheric Filter
    slots = 1

    SETUP
    {
      name = CO2 Filter
      desc = Extract <b>CO2</b> from the atmosphere.

      MODULE
      {
        type = Harvester
        id_field = resource
        id_value = CarbonDioxide
      }
    }

    SETUP
    {
      name = Oxygen Filter
      desc = Extract <b>Oxygen</b> from the atmosphere.

      MODULE
      {
        type = Harvester
        id_field = resource
        id_value = Oxygen
      }
    }

    SETUP
    {
      name = Nitrogen Filter
      desc = Extract <b>Nitrogen</b> from the atmosphere.

      MODULE
      {
        type = Harvester
        id_field = resource
        id_value = Nitrogen
      }
    }
  }

  MODULE:NEEDS[FeatureReliability]
  {
    name = Reliability
    type = Harvester
    title = Harvester
    repair = Engineer
    mtbf = 72576000 // 8y
    extra_cost = 1.0
    extra_mass = 0.5
  }

  @mass = 0.2
}


// ============================================================================
// Pseudo-resources used by processes
// ============================================================================

RESOURCE_DEFINITION
{
  name = _Scrubber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _PressureControl
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WaterRecycler
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WasteProcessor
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _FuelCell
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WaterElectrolysis
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Sabatier
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Haber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Anthraquinone
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _HydrazineProduction
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SOE
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _MRE
  density = 0.0
  isVisible = false
}