// ============================================================================
// This profile try to reproduce the user experience of versions before 1.1.5
// ============================================================================

Profile
{
  name = classic

  Supply
  {
    resource = ElectricCharge
    on_pod = 50.0
    on_eva = 33.0
    on_rescue = 10000.0
    low_message = $VESSEL batteries are almost empty@<i>We are squeezing the last bit of juice</i>|$VESSEL batteries are almost empty@<i>Shutting down non-essential systems</i>
    empty_message = There is no more ElectricCharge on $VESSEL@<i>Life support systems are off</i>|There is no more ElectricCharge on $VESSEL@<i>We lost control</i>
    refill_message = $VESSEL batteries recharged@<i>The crew is allowed music again</i>|$VESSEL batteries recharged@<i>Systems are back online</i>
  }

  Supply
  {
    resource = Food
    on_pod = 31.491405
    on_rescue = 50.0
    low_message = Food reserves are getting low on $VESSEL@<i>Anything edible is being scrutinized</i>
    empty_message = There is no more food on $VESSEL@<i>The crew prepare for the inevitable</i>
    refill_message = $VESSEL food reserves restored@<i>Double snack rations for everybody</i>
  }

  Supply
  {
    resource = Oxygen
    on_pod = 2978.7
    on_eva = 200.0
    on_rescue = 5000.0
    low_message = Oxygen reserves are dangerously low on $VESSEL@<i>There is mild panic among the crew</i>
    empty_message = There is no more oxygen on $VESSEL@<i>Everybody stop breathing</i>
    refill_message = $VESSEL oxygen reserves restored@<i>The crew is taking a breather</i>
  }

  Rule
  {
    name = climatization
    input = ElectricCharge
    rate = 0.0002 // per-kelvin (temp diff), per m^3 (living space), per-second
    degeneration = 0.00000345 // 30min
    modifier = temperature,volume,per_capita
    warning_message = $ON_VESSEL$KERBAL feels cold|$ON_VESSEL$KERBAL is sweating
    danger_message = $ON_VESSEL$KERBAL is freezing to death|$ON_VESSEL$KERBAL is burning alive
    fatal_message = $ON_VESSEL$KERBAL froze to death|$ON_VESSEL$KERBAL was burned alive
    relax_message = $ON_VESSEL$KERBAL hypothermia is under control|$ON_VESSEL$KERBAL is hugging the climatizer
  }

  Rule
  {
    name = eating
    input = Food
    output = Waste
    rate = 3.145 // 1.77 Kg per-day
    interval = 10800.0 // 2 meals per-day
    degeneration = 0.03333 // 30 meals, 15 days
    warning_message = $ON_VESSEL$KERBAL is hungry
    danger_message = $ON_VESSEL$KERBAL is starving
    fatal_message = $ON_VESSEL$KERBAL starved to death
    relax_message = $ON_VESSEL$KERBAL is enjoying some snacks right now
  }

  Rule
  {
    name = breathing
    input = Oxygen
    output = CarbonDioxide
    rate = 0.02758 // 0.84 Kg per-day
    degeneration = 0.0055555 // 3 minutes
    modifier = breathable
    warning_message = $ON_VESSEL$KERBAL can't breathe
    danger_message = $ON_VESSEL$KERBAL is suffocating
    fatal_message = $ON_VESSEL$KERBAL suffocated to death
    relax_message = $ON_VESSEL$KERBAL is breathing again
  }

  Rule
  {
    name = stress
    degeneration = 0.00000000463 // 10000 days
    variance = 0.33 // add per-kerbal variance
    modifier = living_space,comfort
    breakdown = true // trigger breakdown event instead of death
    warning_message = $ON_VESSEL$KERBAL is losing $HIS_HER mind@<i>Concentration is becoming a problem</i>
    danger_message = $ON_VESSEL$KERBAL is about to breakdown@<i>Starting to hear voices</i>
    relax_message = $ON_VESSEL$KERBAL is thinking straight now@<i>Let's do it again!</i>
  }

  Rule
  {
    name = radiation
    degeneration = 1.0 // just use the modifier
    variance = 0.1 // add per-kerbal variance
    modifier = radiation,shielding
    warning_threshold = 25.0
    danger_threshold = 37.5
    fatal_threshold = 50.0
    warning_message = $ON_VESSEL$KERBAL has been exposed to intense radiation
    danger_message = $ON_VESSEL$KERBAL is reporting symptoms of radiation poisoning
    fatal_message = $ON_VESSEL$KERBAL died after being exposed to extreme radiation
    relax_message = $ON_VESSEL$KERBAL has recovered from radiation exposure
  }

  Process
  {
    name = scrubber
    modifier = _Scrubber
    input = ElectricCharge@0.025
    input = CarbonDioxide@0.02
    output = Oxygen@0.01 // ~50% efficiency
  }

  Process
  {
    name = rgt
    modifier = _RTG
    input = _RTG@0.000000001888   // 28.8 kerbin-year half-life
    output = ElectricCharge@1.0
  }

  Process
  {
    name = fuel cell
    modifier = _FuelCell
    input = LiquidFuel@0.0016875
    input = Oxidizer@0.0020625
    output = ElectricCharge@1.5
    dump = false
  }
}


// ============================================================================
// Add scrubber to all manned parts
// ============================================================================

@PART[*]:HAS[#CrewCapacity[>0]]:NEEDS[ProfileClassic]:FOR[Kerbalism]
{
  MODULE
  {
    name = ProcessController
    resource = _Scrubber
    title = Scrubber
    capacity = #$../CrewCapacity$
    running = true
  }

  RESOURCE
  {
    name = CarbonDioxide
    amount = 0
    maxAmount = 1000
    isTweakable = false
    isVisible = false
  }
}


// ============================================================================
// Add supplies to inline containers
// ============================================================================

@PART[kerbalism-container-inline-*]:NEEDS[ProfileClassic]:FOR[Kerbalism]
{
  RESOURCE
  {
    name = Food
    amount = 1
    maxAmount = 1
    @amount *= #$../ContainerVolume$
    @maxAmount *= #$../ContainerVolume$
  }
}


// ============================================================================
// Add supplies to radial containers
// ============================================================================

@PART[kerbalism-container-radial-*]:NEEDS[ProfileClassic]:FOR[Kerbalism]
{
  RESOURCE
  {
    name = Oxygen
    amount = 809.22
    maxAmount = 809.22
    @amount *= #$../ContainerVolume$
    @maxAmount *= #$../ContainerVolume$
  }
}


// ============================================================================
// Setup greenhouse
// ============================================================================

@PART[kerbalism-greenhouse]:NEEDS[ProfileClassic]:FOR[Kerbalism]
{
  MODULE
  {
    name = Greenhouse

    crop_resource = Food                // name of resource produced by harvests
    crop_size = 2500.0                  // amount of resource produced by harvests
    crop_rate = 0.00000023148           // growth per-second when all conditions apply
    ec_rate = 2.5                       // EC/s consumed by the lamp at max intensity

    light_tolerance = 400.0             // minimum lighting flux required for growth, in W/m^2

    lamps = Cylinder001                 // object with emissive texture used to represent lamp intensity graphically
    shutters = door                     // animation to manipulate shutters
    plants =                            // animation to represent plant growth graphically
  }
}


// ============================================================================
// Stock RTG work correctly at arbitrary timestep and resource capacity, and output decay
// ============================================================================

@PART[rtg]:NEEDS[ProfileClassic]:FOR[Kerbalism]
{
  MODULE
  {
    name = ProcessController
    resource = _RTG
    title = RTG
    capacity = 0.75
    running = true
    toggle = false
  }

  !MODULE[ModuleGenerator] {}
}


// ============================================================================
// Stock fuel cells work correctly at arbitrary timestep and resource capacity
// ============================================================================

@PART[FuelCell]:NEEDS[ProfileClassic]:FOR[Kerbalism]
{
  !MODULE[ModuleResourceConverter] {}
  !RESOURCE[ElectricCharge] {}

  MODULE
  {
    name = ProcessController
    resource = _FuelCell
    title = Fuel cell
    capacity = 1
  }

  MODULE:NEEDS[FeatureReliability]
  {
    name = Reliability
    type = ProcessController
    title = Fuel Cell
    redundancy = Power Generation
    repair = Engineer
    mtbf = 72576000 // 8y
    extra_cost = 1.0
    extra_mass = 0.5
  }

  @TechRequired = basicScience
}

@PART[FuelCellArray]:NEEDS[ProfileClassic]:FOR[Kerbalism]
{
  !MODULE[ModuleResourceConverter] {}
  !RESOURCE[ElectricCharge] {}

  MODULE
  {
    name = ProcessController
    resource = _FuelCell
    title = Fuel cell
    capacity = 6
  }

  MODULE:NEEDS[FeatureReliability]
  {
    name = Reliability
    type = ProcessController
    title = Fuel Cell
    redundancy = Power Generation
    repair = Engineer
    mtbf = 72576000 // 8y
    extra_cost = 1.0
    extra_mass = 0.5
  }
}


// ============================================================================
// Pseudo-resources used by processes
// ============================================================================

RESOURCE_DEFINITION
{
  name = _Scrubber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _RTG
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _FuelCell
  density = 0.0
  isVisible = false
}
